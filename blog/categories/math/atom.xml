<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: math | adereth]]></title>
  <link href="http://adereth.github.io/blog/categories/math/atom.xml" rel="self"/>
  <link href="http://adereth.github.io/"/>
  <updated>2016-01-20T06:05:20-08:00</updated>
  <id>http://adereth.github.io/</id>
  <author>
    <name><![CDATA[Matt Adereth]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Presentation on The Mode Tree at Papers We Love Too]]></title>
    <link href="http://adereth.github.io/blog/2015/04/06/presentation-on-the-mode-tree-at-papers-we-love/"/>
    <updated>2015-04-06T20:10:00-07:00</updated>
    <id>http://adereth.github.io/blog/2015/04/06/presentation-on-the-mode-tree-at-papers-we-love</id>
    <content type="html"><![CDATA[<script src="http://d3js.org/d3.v2.js"></script>


<div>
<style type="text/css">

.chart {
  font-size: 10px;
  margin-top: -40px;
}


.axis path, .axis line {
  fill: none;
  stroke: #000;
  stroke-width: 2;
  shape-rendering: crispEdges;
}

.area {
  fill: indianred;
  fill-opacity: 0.25;
  stroke: #000;
  stroke-opacity: 0.5;
}

.point {
  fill: #126ED5;
  fill-opacity: 0.75;
  stroke: none;
  stroke-width: 1
  stroke-opacity: 0.5;
}

.kernelline {
  fill: none;
  stroke: #D04400;
  stroke-width: 1;
  stroke-opacity: 0.75;
}

.kdeline {
  fill: none;
  stroke: #CB17CE;
  stroke-opacity: 0.75;
  stroke-width: 4
}

.summedarea {
  fill: steelblue;
  fill-opacity: 0.75;
  stroke: #000;
  stroke-opacity: 0.5;
}

.bar rect {
  fill: steelblue;
  fill-opacity: 0.75;
  shape-rendering: crispEdges;
  stroke: #000;
  stroke-opacity: 0.5;

}

.bar text {
  fill: #fff;
}

.equation {
  opacity: 0;
}

.kernelwidth {
  stroke: #2DB15D;
  stroke-width: 4;
}

.treeline {
  fill: none;
  stroke: #000;
  stroke-opacity: 0.75;
  stroke-width: 2
}

.treeconnector {
  fill: none;
  stroke: #999;
  stroke-opacity: 0.75;
  stroke-width: 2
}

</style>
</div>


<p>I recently gave a mini talk on <a href="http://adereth.github.io/oneoff/Mode%20Trees.pdf">The Mode Tree: A Tool for Visualization of Nonparametric Density Features</a> at <a href="http://www.meetup.com/papers-we-love-too/">Papers We Love Too</a> in San Francisco.  The talk is just the first 10 minutes:</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/T3Bt9Tn6P5c" frameborder="0" allowfullscreen></iframe>


<p>I did the entire presentation as one huge sequence of animations using <a href="http://d3js.org/">D3.js</a>.  The Youtube video doesn&rsquo;t capture the glory that is SVG, so <a href="/oneoff/pwl-draft/scratch.html">I&rsquo;ve posted the slides</a>.</p>

<p>I also finally got to apply the technique that I wrote about in my <a href="/blog/2013/11/29/colorful-equations/">Colorful Equations with MathJax post</a> from over a year ago, only instead of coloring explanatory text, the colors in the accompanying chart match:</p>

<div style="font-size: 100%;">
$$
\definecolor{kernel}{RGB}{217,86,16}
\definecolor{kde}{RGB}{203,23,206}
\definecolor{point}{RGB}{18,110,213}
\definecolor{width}{RGB}{45,177,93}
\color{kde}\hat{f}_{\color{width}h}\color{black}(x) \color{black} = \frac{1}{n\color{width}h}\color{black}\sum\limits_{i=1}^n \color{kernel}K\color{black}(\frac{x-\color{point}X_i}{\color{width}h})
$$
</div>


<div id='chart-1'></div>


<script type='text/javascript'>
var data = [
{value: 13.1138}, {value: 10.6519}, {value: 20.5735}, {value: 7.89327}, {value: 9.02554}, {value: 20.8411}, {value: 8.84072}, {value: 10.6273}, {value: 13.5194}, {value: 17.9757}, {value: 10.1086}, {value: 8.68131}, {value: 7.16192}, {value: 19.9496}, {value: 8.77111}, {value: 19.5314}, {value: 9.40915}, {value: 12.8664}, {value: 23.1322}, {value: 13.5008}];

function drawChart(data,chart,height) {
$(chart).empty();
var margin = {top: 50, right: 40, bottom: 40, left: 60};
var width = $('.entry-content').width();
var x = d3.scale.linear().domain([0, 30]).range([0, width - margin.left - margin.right]);

           var xAxis = d3.svg.axis()
                         .scale(x)
                         .orient('bottom')
                         .tickPadding(8)
                         .ticks(8);

           var svg = d3.select(chart).append('svg')
                       .attr('width', width)
                       .attr('height', height)
                       .attr('class', 'chart')
                       .append('g')
                       .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');

           svg.append("g")
              .attr("class", "x axis")
              .attr("transform", "translate(0," + (height - margin.top - margin.bottom) + ")")
              .call(xAxis);

           var y0 = height - margin.top - margin.bottom;


               var points = svg.selectAll('.chart')
                               .data(data)
                           .enter().append('circle')
                               .classed('point', true)
                               .attr("id", function(d, i) { return "point" + i })
                               .attr('cx', function(d, i) { return x(d.value) })
                               .attr('cy', y0)
                               .attr('r', 3.25);

               var y = d3.scale.linear()
                         .domain([0, 1])
                         .range([height - margin.top - margin.bottom, 0]);

               function subpoints(d, stddev) {
                   return d3.range(d.value - 7, d.value + 7, 0.1).map(
                       function (d2,i,a) {
                           return {value: d2, height: gaussian(d2, d.value, stddev)};
                       });
               }

               var widthLine = svg.append('path')
                   .attr('class', 'kernelwidth')
                   .attr("d", d3.svg.line()([[x(data[0].value - 1), y(0) + 2,],[x(data[0].value), y(0) + 2]]))
                   .style('opacity', 0);

               widthLine.transition().duration(1000).style('opacity', 1);

var stddev = 1;

           var scale = 0.5 / Math.sqrt(2 * Math.PI) / 2;
           function gaussian(x, mean, sigma) {
               var z = (x - mean) / sigma;
               return scale * Math.exp(-0.5 * z * z) / sigma;
           };


               var kernels = data.sort(function(x,y){return x.value - y.value}).map(function(d, i) {
                   var line = d3.svg.line()
                                .x(function(d) { return x(d.value); })
                                .y(function(d) { return y(d.height) });

                   return svg.append('path')
                             .attr('class', 'kernelline')
                             .attr("d", line(subpoints(d, stddev)))
                             .style('opacity', 1);

               });

                   var intermediateAreaPoints =
                       d3.range(0, 30, 0.01).concat(data.map(function(x) {return x.value}))
                                      .sort(function(a,b){return a-b})
                                      .map(
                                          function (x,i2,a) {
                                              var y = 0;
                                              //console.log(x)
                                              data.forEach(function(d) {
                                                  y += gaussian(x, d.value, stddev)
                                              });
                                              return {value: x, height: y};
                                          }
                                      );
                   var line = d3.svg.line()
                                .x(function(d) { return x(d.value); })
                                .y(function(d) { return y(d.height); });


        var summedArea = svg.append('path')
            .attr('class', 'kdeline')
                .attr("d", line(intermediateAreaPoints));



}

function drawChartWithResize(data, chart, height) {
    drawChart(data, chart, height);
        $(window).resize(function() {drawChart(data, chart, height); })
};


drawChartWithResize(data, '#chart-1', 300);


</script>


<p>Any questions or feedback on the presentation are welcome&hellip; thanks!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Poisonous Shapes in Algebra and Graph Theory]]></title>
    <link href="http://adereth.github.io/blog/2015/02/02/poisonous-shapes/"/>
    <updated>2015-02-02T03:10:00-08:00</updated>
    <id>http://adereth.github.io/blog/2015/02/02/poisonous-shapes</id>
    <content type="html"><![CDATA[<p>I recently started learning about Algebraic Lattices because I was interested in how they relate to Automata Theory.  It turns out they&rsquo;re fundamental to a bunch of other things that I&rsquo;ve always wanted to learn more about, like <a href="http://en.wikipedia.org/wiki/Conflict-free_replicated_data_type">CRDT</a>s and <a href="http://en.wikipedia.org/wiki/Domain_theory">Type Theory</a>.</p>

<p>I stumbled upon an interesting property about lattices that reminded me of something from Graph Theory&hellip;</p>

<center><svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="155.18422"
   height="301.1748"
   id="svg6140"
   sodipodi:version="0.32"
   inkscape:version="0.48.4 r9939"
   version="1.0"
   sodipodi:docname="jollyrogerk33.svg"
   inkscape:output_extension="org.inkscape.output.svg.inkscape">
  <defs
     id="defs6142" />
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="0.60968775"
     inkscape:cx="-25.663406"
     inkscape:cy="189.29982"
     inkscape:document-units="px"
     inkscape:current-layer="layer1"
     inkscape:window-width="1280"
     inkscape:window-height="911"
     inkscape:window-x="0"
     inkscape:window-y="50"
     showgrid="false"
     fit-margin-top="0"
     fit-margin-left="0"
     fit-margin-right="0"
     fit-margin-bottom="0"
     inkscape:window-maximized="0" />
  <metadata
     id="metadata6145">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     inkscape:label="Livello 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-819.39491,12.483736)">
    <path
       style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.90221667px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:0.97664639"
       d="m 845.14185,265.0185 0,11.31032 c 2.74148,-0.22835 5.61068,-0.11913 8.09225,-0.25623 55.04941,2.75441 39.55549,1.06818 50.11585,1.68374 1.9123,-1.14146 22.86681,-0.94646 35.01299,-0.14641 l 0,-11.32862 c -38.92008,0.36723 -11.35383,0.33584 -55.32373,0.29283 -10.8364,-0.79414 -26.76091,-1.0486 -37.89736,-1.55563 z"
       id="path4647"
       inkscape:connector-curvature="0" />
    <path
       inkscape:connector-curvature="0"
       id="path4645"
       d="m 840.41696,199.27758 0,11.23287 c 3.31989,-0.22678 6.79443,-0.11831 9.79957,-0.25447 66.66384,2.73555 47.901,1.06086 60.6894,1.67221 2.31575,-1.13364 27.69131,-0.93998 42.40014,-0.14541 l 0,-11.25105 c -47.13156,0.36471 -13.74932,0.33355 -66.99608,0.29082 -13.12269,-0.7887 -32.40698,-1.04141 -45.89303,-1.54497 z"
       style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.98943597px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:0.97664639" />
    <path
       style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.98943597px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:0.97664639"
       d="m 840.41696,131.1436 0,11.23287 c 3.31989,-0.22678 6.79443,-0.11831 9.79957,-0.25446 66.66384,2.73554 47.901,1.06085 60.6894,1.6722 2.31575,-1.13364 27.69131,-0.93997 42.40014,-0.1454 l 0,-11.25106 c -47.13156,0.36472 -13.74932,0.33355 -66.99608,0.29083 -13.12269,-0.7887 -32.40698,-1.04142 -45.89303,-1.54498 z"
       id="path4635"
       inkscape:connector-curvature="0" />
    <path
       inkscape:connector-curvature="0"
       style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.86492717px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:0.97664639"
       d="m 905.97614,-12.051172 c -6.94288,0.01275 -13.90683,1.241795 -20.46589,3.5608817 -9.63595,3.4450183 -20.47731,4.8420292 -28.59718,11.4535567 -7.22982,9.8835496 -9.16752,22.2971756 -12.44473,33.8283756 -3.51135,8.340186 -2.15892,17.435419 -2.55135,26.211023 -1.12794,6.212726 1.41543,12.80319 7.10341,15.82206 4.88707,3.180012 11.4454,3.05686 15.84041,6.901502 l 0.40381,0.477232 0.29368,0.734202 c 0.98803,7.540211 -0.98642,15.112489 -0.71584,22.686849 1.18839,5.17917 9.95561,4.13806 14.35365,3.74444 4.27757,-5.80289 1.07284,-15.52197 4.09318,-22.540017 0.86658,7.01242 0.35106,14.086607 0.60572,21.126677 0.60932,5.52254 10.52545,4.06042 14.39036,2.55135 1.28292,-7.34215 0.73358,-15.220515 2.12919,-22.686854 0.95052,2.410257 1.16899,12.229364 1.57854,17.290464 -1.79016,8.48854 9.49605,8.1958 14.62898,5.50652 0.82581,-6.37016 -0.18671,-13.32291 0,-19.896884 -0.46982,-6.756154 0.98316,0.479604 1.28485,3.505816 1.5075,5.084368 -1.01033,12.488198 2.95517,16.005608 6.08634,1.45946 15.13248,-0.0462 12.72006,-8.25977 0.7096,-7.084927 -2.53869,-16.590186 3.9647,-21.585552 5.29988,-2.017606 11.08193,-2.72963 16.26258,-5.176127 6.42891,-1.750426 7.58354,-8.81202 8.62688,-14.408721 2.22774,-10.435458 -0.0464,-20.961952 -2.03745,-31.221954 -1.79979,-7.531653 -2.04061,-15.579359 -5.30458,-22.668499 -6.68658,-8.4233863 -16.54686,-13.7356223 -26.17431,-18.1347983 -7.22912,-3.2981837 -15.07523,-4.8418467 -22.94384,-4.8273807 z m -14.95937,33.718243 c 2.10467,-0.05674 4.16003,0.207826 5.98375,1.45005 1.84852,1.64058 1.75218,4.424675 2.01906,6.699598 0.14417,2.518978 0.0496,5.127529 -1.17473,7.397089 -2.27483,5.14546 -5.76034,9.616653 -9.04904,14.133395 -4.41894,4.709355 -10.26387,7.689929 -15.43661,11.435201 -2.76209,1.242347 -6.03867,1.577466 -8.92055,0.605717 -4.21297,-2.244927 -6.84773,-6.585425 -7.69077,-11.196585 -1.16756,-3.665403 -0.8984,-7.712115 0.71584,-11.196586 0.75416,-2.88686 2.92153,-5.033028 4.62548,-7.378734 6.8965,-4.934991 14.23336,-9.702072 22.63179,-11.545334 2.03389,0.01815 4.19112,-0.347084 6.29578,-0.403811 z m 26.28444,0 c 2.34988,-0.0343 4.79692,0.424246 7.08506,0.403811 8.39843,1.843262 15.73529,6.610343 22.6318,11.545334 1.70393,2.345706 3.8713,4.49188 4.62547,7.378734 1.61425,3.484471 1.88338,7.531183 0.71582,11.196586 -0.84304,4.611154 -3.47777,8.951658 -7.69074,11.196585 -2.88195,0.971749 -6.15849,0.63663 -8.92056,-0.605717 -5.17278,-3.745272 -11.01769,-6.725828 -15.43662,-11.435201 -3.28869,-4.516742 -6.77421,-8.987935 -9.04904,-14.133395 -1.22434,-2.26956 -1.3189,-4.878111 -1.17472,-7.397089 0.26686,-2.274923 0.17053,-5.059018 2.01905,-6.699598 1.59576,-1.086949 3.3668,-1.423354 5.19448,-1.45005 z m -13.28906,33.259368 c 1.6662,-0.01504 3.10357,1.227657 4.05647,2.532998 4.17116,4.796556 8.58313,9.388322 12.53651,14.372011 0.90133,2.320373 -0.58637,4.902233 -2.75326,5.855263 -1.28796,0.897924 -2.76249,0.14314 -3.9647,-0.513941 -3.22768,-1.716489 -6.08835,-4.247461 -9.67311,-5.212837 -1.34893,-0.01715 -2.61801,0.856791 -3.83621,1.41334 -2.76786,1.514982 -5.13805,3.668163 -7.96609,5.084351 -2.62578,0.01797 -5.73514,-1.687144 -5.87362,-4.57041 -0.0204,-0.623443 0.11288,-1.253401 0.33039,-1.835506 4.07116,-5.100468 8.46567,-9.931191 13.16057,-14.463786 1.04334,-0.908649 1.74698,-2.339098 3.24885,-2.569708 0.246,-0.05692 0.49617,-0.08962 0.7342,-0.09177 z"
       id="path2229" />
    <path
       inkscape:connector-curvature="0"
       style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.86492717px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:0.97664639"
       d="m 838.11171,121.30104 c -4.84315,0.005 -16.50874,3.28843 -8.26262,8.22561 6.96347,3.7749 4.73658,13.5564 -3.56148,12.76666 -7.59902,-0.89536 -8.8464,7.97316 -1.85363,9.54096 3.98301,1.91103 11.10132,2.91869 15.6835,-1.64686 5.54616,-3.20673 11.25564,1.66729 16.02585,4.2186 8.85191,5.07408 25.37414,14.79644 24.6882,16.90852 0.64922,4.24223 -11.02271,8.62148 -16.16503,12.96296 -6.23732,4.53897 -14.22724,10.67998 -20.77123,2.83767 -5.44737,-5.50106 -12.52774,1.72755 -10.66228,7.38171 0.38307,2.4935 13.59453,2.89896 10.78667,11.37734 -4.91785,5.42092 -0.37071,17.08935 7.41558,11.5773 5.27988,-3.00105 12.86771,-7.10211 9.66334,-14.4713 -2.31295,-7.36261 7.84424,-9.17186 12.19052,-12.77226 6.97023,-3.79747 17.95698,-10.11653 21.09401,-10.3072 2.97458,-0.0808 34.62738,20.68734 33.43028,21.91823 -1.47469,7.09178 1.25924,16.43999 10.03096,15.03141 4.26966,-0.0495 10.40306,-2.37073 5.91257,-7.32241 -4.47899,-6.13062 1.88695,-11.04913 7.67828,-7.71387 4.92668,1.13211 11.87435,-3.81969 5.80643,-7.98664 -4.69408,-7.52518 -12.75721,-1.09533 -18.91223,-0.54479 -10.10051,-1.28828 -17.62058,-8.89561 -25.93501,-14.06088 -3.43062,-2.3645 -6.26627,-4.65739 -2.99491,-8.44786 1.35027,-1.51617 26.53178,-18.22406 35.2272,-20.99496 4.13051,-0.66555 14.42637,7.99213 22.25003,3.9194 5.99844,-1.48859 8.92714,-10.4555 1.00792,-11.64647 -8.60403,-2.02199 -11.35359,-10.10261 -8.30906,-17.65273 0.54854,-7.39259 -14.31518,-5.07937 -13.87337,-3.5686 -4.28375,1.52385 0.72786,13.67839 -4.88051,18.82909 -13.03561,7.51312 -35.96223,21.59302 -38.33784,23.12996 -6.47453,3.9506 -12.86223,2.4353 -18.09142,-2.19028 -12.72062,-9.30521 -36.09241,-23.59049 -37.93799,-26.69735 -1.51146,-2.17925 2.26283,-11.18726 -5.16393,-12.4445 -1.04727,-0.23243 -2.11556,-0.13986 -3.1788,-0.15646 z"
       id="path2237"
       sodipodi:nodetypes="cccccccccccccccccccccccccccccccccc" />
    <path
       sodipodi:nodetypes="cccccccccccccccccccccccccccccccccc"
       id="path4633"
       d="m 839.55678,190.66451 c -4.84315,0.005 -16.50874,3.28843 -8.26262,8.2256 6.96347,3.77491 4.73659,13.5564 -3.56148,12.76667 -7.59902,-0.89536 -8.84639,7.97315 -1.85362,9.54096 3.98301,1.91103 11.10132,2.91869 15.6835,-1.64687 5.54616,-3.20672 11.25563,1.66729 16.02585,4.21861 8.85191,5.07408 25.37414,14.79644 24.6882,16.90851 0.64921,4.24224 -11.02272,8.62149 -16.16503,12.96297 -6.23732,4.53897 -14.22724,10.67998 -20.77124,2.83767 -5.44736,-5.50106 -12.52774,1.72755 -10.66227,7.38171 0.38307,2.4935 13.59453,2.89896 10.78666,11.37734 -4.91785,5.42092 -0.37071,17.08935 7.41559,11.5773 5.27987,-3.00106 12.8677,-7.10212 9.66334,-14.4713 -2.31296,-7.36261 7.84423,-9.17186 12.19051,-12.77227 6.97024,-3.79747 17.95698,-10.11653 21.09401,-10.30719 2.97459,-0.0808 34.6274,20.68734 33.4303,21.91823 -1.47475,7.09178 1.25924,16.43998 10.03096,15.03141 4.26965,-0.0495 10.40306,-2.37074 5.91256,-7.32242 -4.47904,-6.13061 1.88696,-11.04912 7.67829,-7.71386 4.92667,1.1321 11.87434,-3.81969 5.80642,-7.98664 -4.69407,-7.52518 -12.7572,-1.09534 -18.91223,-0.5448 -10.10051,-1.28828 -17.62059,-8.8956 -25.93502,-14.06087 -3.43061,-2.36451 -6.26627,-4.65739 -2.9949,-8.44786 1.35027,-1.51617 26.53173,-18.22407 35.22721,-20.99496 4.1305,-0.66556 14.42637,7.99212 22.25003,3.9194 5.99843,-1.48859 8.92714,-10.4555 1.00791,-11.64647 -8.60403,-2.02199 -11.35359,-10.10262 -8.30905,-17.65273 0.54853,-7.39259 -14.31519,-5.07937 -13.87337,-3.5686 -4.28375,1.52385 0.72785,13.67838 -4.88057,18.82908 -13.03562,7.51313 -35.96219,21.59302 -38.3378,23.12996 -6.47452,3.9506 -12.86223,2.43531 -18.09142,-2.19027 -12.72061,-9.30522 -36.0924,-23.59049 -37.93799,-26.69735 -1.51145,-2.17926 2.26284,-11.18726 -5.16393,-12.4445 -1.04726,-0.23243 -2.11556,-0.13986 -3.1788,-0.15646 z"
       style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.86492717px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:0.97664639"
       inkscape:connector-curvature="0" />
  </g>
</svg>
</center>


<h2>Distributive Lattices</h2>

<p>First, let&rsquo;s start with the mathy <a href="http://en.wikipedia.org/wiki/Lattice_(order)">definition of a lattice given by Wikipedia</a>:</p>

<blockquote><p>If $(L, \leq)$ is a partially ordered set, and $S \subseteq L$ is an arbitrary subset, then an element $u \in L$ is said to be an <em>upper bound</em> of $S$ if $s \leq u$ for each $s \in S$. A set may have many upper bounds, or none at all. An upper bound $u$ of $S$ is said to be its <em>least upper bound</em>, or join, or supremum, if $u \leq x$ for each upper bound $x$ of $S$.  A set need not have a least upper bound, but it cannot have more than one. Dually, $l \in L$ is said to be a <em>lower bound</em> of $S$ if $l \leq s$ for each $s \in S$. A lower bound $l$ of $S$ is said to be its <em>greatest lower bound</em>, or meet, or infimum, if $x \leq l$ for each lower bound $x$ of $S$. A set may have many lower bounds, or none at all, but can have at most one greatest lower bound.</p>

<p>A partially ordered set $(L, \leq)$ is called a <em>join-semilattice</em> and a <em>meet-semilattice</em> if each two-element subset $\{a,b\} \subseteq L$ has a join (i.e. least upper bound) and a meet (i.e. greatest lower bound), denoted by $a \vee b$ and $a \wedge b$, respectively. $(L, \leq)$ is called a <em>lattice</em> if it is both a join- and a meet-semilattice.</p></blockquote>

<p>That&rsquo;s a lot to take in, but it&rsquo;s not so bad once you start looking at lattices using <a href="http://en.wikipedia.org/wiki/Hasse_diagram">Hasse diagrams</a>.  A Hasse diagram is a visualization of a partially ordered set, where each element is drawn below the other elements that it is less than.  Edges are drawn between two elements $x$ and $y$ if $x &lt; y$ and there is no $z$ such that $x &lt; z &lt; y$.</p>

<p>For example, if we define the $\leq$ operator to be &ldquo;is a subset of&rdquo;, we get a partial ordering for any powerset.  Here&rsquo;s the Hasse diagram for the lattice $(\mathcal{P}(\{1,2,3\}), \subseteq)$:</p>

<center>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   width="233"
   height="215"
   id="svg2"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="hasse-pure.svg">
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1570"
     inkscape:window-height="1168"
     id="namedview3364"
     showgrid="false"
     inkscape:zoom="1.098616"
     inkscape:cx="-46.955572"
     inkscape:cy="147.60556"
     inkscape:window-x="469"
     inkscape:window-y="195"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg2" />
  <defs
     id="defs4" />
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
    <g transform="scale(0.5)">
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text2985"
     y="50.390625"
     x="177.37425"><tspan
       id="tspan2987"
       y="50.390625"
       x="177.37425"
       style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">{1,2,3}</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text2989"
     y="167.96315"
     x="15"><tspan
       id="tspan2991"
       y="167.96315"
       x="15"
       style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">{1,2}</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#222;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text2993"
     y="167.96307"
     x="193.54613"><tspan
       id="tspan2995"
       y="167.96307"
       x="193.54613"
       style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">{1,3}</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text2997"
     y="167.96315"
     x="358.05933"><tspan
       id="tspan2999"
       y="167.96315"
       x="358.05933"
       style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">{2,3}</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text3001"
     y="285.53552"
     x="34.101562"><tspan
       id="tspan3003"
       y="285.53552"
       x="34.101562"
       style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">{1}</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text3005"
     y="285.53552"
     x="209.718"><tspan
       id="tspan3007"
       y="285.53552"
       x="209.718"
       style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">{2}</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text3009"
     y="285.53552"
     x="374.2312"><tspan
       id="tspan3011"
       y="285.53552"
       x="374.2312"
       style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">{3}</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text3013"
     y="403.10803"
     x="221.31956"><tspan
       id="tspan3015"
       y="403.10803"
       x="221.31956"
       style="font-size:40px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">{}</tspan></text>
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3037"
     d="M 90.60389,125.78731 215.10529,67.000204" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3039"
     d="M 376.22463,122.93017 C 334.72415,103.33447 293.22369,83.738764 251.72322,64.143064" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3044"
     d="m 251.72322,361.78174 124.5014,-58.78711" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3046"
     d="M 215.1053,245.78731 90.6039,187.0002" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3048"
     d="m 251.72322,246.07302 124.5014,-58.78711" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3050"
     d="m 90.60389,244.35874 124.5014,-58.78711" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3052"
     d="M 215.1053,361.78174 90.6039,302.99463" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3054"
     d="M 376.22462,244.07302 251.72322,185.28591" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:1.04549277px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3148"
     d="m 233.48713,65.213374 -0.0438,64.059836" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:1.04549277px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3154"
     d="m 233.48713,300.35827 -0.0438,64.05984" />
  <path
     d="m 60.806485,182.28942 -0.0438,64.05984"
     id="path3103"
     style="fill:none;stroke:#000000;stroke-width:1.04549277px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     inkscape:connector-curvature="0" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:1.04549277px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3105"
     d="m 397.94934,182.28942 -0.0438,64.05984" /></g>
</svg>
</center>


<p>In this case, the $\subseteq$ operator results in $\vee$ (the &ldquo;join&rdquo;) being union of the sets and $\wedge$ (the &ldquo;meet&rdquo;) as the intersection of the sets.  It&rsquo;s a tragic failure of notation that $\vee$ means you should find the common connected element that is <em>above</em> the pair in the diagram and $\wedge$ means you should look <em>below</em>.</p>

<p>Another example is the set of divisors of a number, where the $\leq$ operator means &ldquo;divides into&rdquo;.  Here&rsquo;s the Hasse diagram for all the divisors of 30:</p>

<center><svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   width="233"
   height="215"
   id="svg2"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="hasse-divisors.svg">
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1538"
     inkscape:window-height="1024"
     id="namedview3364"
     showgrid="false"
     inkscape:zoom="1.5536776"
     inkscape:cx="253.57414"
     inkscape:cy="183.71779"
     inkscape:window-x="469"
     inkscape:window-y="195"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg2" />
  <defs
     id="defs4" />
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g transform="scale(0.5)">
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text2985"
     y="50.390625"
     x="207.75995"><tspan
       id="tspan2987"
       y="50.390625"
       x="207.75995"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">30</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text2989"
     y="167.96313"
     x="47.923256"><tspan
       id="tspan2991"
       y="167.96313"
       x="47.923256"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">6</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text2993"
     y="167.96307"
     x="207.08612"><tspan
       id="tspan2995"
       y="167.96307"
       x="207.08612"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">10</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text2997"
     y="167.96313"
     x="372.01926"><tspan
       id="tspan2999"
       y="167.96313"
       x="372.01926"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">15</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text3001"
     y="285.53552"
     x="48.597084"><tspan
       id="tspan3003"
       y="285.53552"
       x="48.597084"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">2</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text3005"
     y="285.53552"
     x="220.76776"><tspan
       id="tspan3007"
       y="285.53552"
       x="220.76776"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">3</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text3009"
     y="285.53552"
     x="385.40793"><tspan
       id="tspan3011"
       y="285.53552"
       x="385.40793"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">5</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text3013"
     y="403.10803"
     x="220.33807"><tspan
       id="tspan3015"
       y="403.10803"
       x="220.33807"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">1</tspan></text>
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3037"
     d="M 90.60389,125.78731 215.10529,67.000204" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3039"
     d="M 376.22463,122.93017 C 334.72415,103.33447 293.22369,83.738764 251.72322,64.143064" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3044"
     d="m 251.72322,361.78174 124.5014,-58.78711" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3046"
     d="M 215.1053,245.78731 90.6039,187.0002" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3048"
     d="m 251.72322,246.07302 124.5014,-58.78711" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3050"
     d="m 90.60389,244.35874 124.5014,-58.78711" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3052"
     d="M 215.1053,361.78174 90.6039,302.99463" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3054"
     d="M 376.22462,244.07302 251.72322,185.28591" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:1.04549277000000007px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3148"
     d="m 233.48713,65.213374 -0.0438,64.059836" />
  <path
     d="m 233.43615,297.99498 -0.0438,64.05983"
     id="path3414"
     style="fill:none;stroke:#000000;stroke-width:1.04549277000000007px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     inkscape:connector-curvature="0" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:1.04549277000000007px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3416"
     d="m 397.94936,180.42254 -0.0438,64.05984" />
  <path
     d="m 60.806484,180.15887 -0.0438,64.05984"
     id="path3418"
     style="fill:none;stroke:#000000;stroke-width:1.04549277000000007px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     inkscape:connector-curvature="0" /></g>
</svg>
</center>


<p>In this case, $\vee$ ends up meaning Least Common Multiple and $\wedge$ means Greatest Common Divisor.</p>

<p>Yet another example is the set of binary strings of a fixed length $n$, with $S \leq T$ meaning $S_i \leq T_i$ for $1 \leq i \leq n$:</p>

<center><svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="233"
   height="215"
   id="svg2"
   version="1.1"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="hasse-binary.svg">
  <defs
     id="defs4" />
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="0.70710678"
     inkscape:cx="322.41289"
     inkscape:cy="187.04187"
     inkscape:document-units="px"
     inkscape:current-layer="layer1"
     showgrid="false"
     inkscape:window-width="1319"
     inkscape:window-height="841"
     inkscape:window-x="1037"
     inkscape:window-y="511"
     inkscape:window-maximized="0"
     fit-margin-top="20"
     fit-margin-left="20"
     fit-margin-right="20"
     fit-margin-bottom="20" />
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g transform="scale(0.5)">
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-138.63298,-63.539856)">
    <text
       xml:space="preserve"
       style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
       x="333.50229"
       y="113.93048"
       id="text2985"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan2987"
         x="333.50229"
         y="113.93048">111</tspan></text>
    <text
       xml:space="preserve"
       style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
       x="161.75156"
       y="231.50299"
       id="text2989"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan2991"
         x="161.75156"
         y="231.50299">011</tspan></text>
    <text
       xml:space="preserve"
       style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
       x="333.50229"
       y="231.50293"
       id="text2993"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan2995"
         x="333.50229"
         y="231.50293">101</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text2997"
       y="231.50299"
       x="497.49792"
       style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
       xml:space="preserve"><tspan
         y="231.50299"
         x="497.49792"
         id="tspan2999"
         sodipodi:role="line">110</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text3001"
       y="349.07538"
       x="161.75156"
       style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
       xml:space="preserve"><tspan
         y="349.07538"
         x="161.75156"
         id="tspan3003"
         sodipodi:role="line">001</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text3005"
       y="349.07538"
       x="333.86362"
       style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
       xml:space="preserve"><tspan
         y="349.07538"
         x="333.86362"
         id="tspan3007"
         sodipodi:role="line">010</tspan></text>
    <text
       xml:space="preserve"
       style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
       x="497.49792"
       y="349.07538"
       id="text3009"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan3011"
         x="497.49792"
         y="349.07538">100</tspan></text>
    <text
       xml:space="preserve"
       style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
       x="333.86362"
       y="466.64789"
       id="text3013"
       sodipodi:linespacing="125%"><tspan
         sodipodi:role="line"
         id="tspan3015"
         x="333.86362"
         y="466.64789">000</tspan></text>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m 229.23687,189.32717 124.5014,-58.78711"
       id="path3037"
       inkscape:connector-curvature="0" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="M 514.85761,186.47003 C 473.35713,166.87433 431.85667,147.27862 390.3562,127.68292"
       id="path3039"
       inkscape:connector-curvature="0" />
    <path
       inkscape:connector-curvature="0"
       id="path3044"
       d="M 390.3562,422.69464 514.8576,363.90753"
       style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="M 353.73828,309.32717 229.23688,250.54006"
       id="path3046"
       inkscape:connector-curvature="0" />
    <path
       inkscape:connector-curvature="0"
       id="path3048"
       d="M 390.3562,309.61288 514.8576,250.82577"
       style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m 229.23687,307.8986 124.5014,-58.78711"
       id="path3050"
       inkscape:connector-curvature="0" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="M 353.73828,422.69464 229.23688,363.90753"
       id="path3052"
       inkscape:connector-curvature="0" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.78431755000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="M 514.8576,307.61288 390.3562,248.82577"
       id="path3054"
       inkscape:connector-curvature="0" />
    <path
       style="fill:none;stroke:#000000;stroke-width:1.04549277000000007px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m 372.12011,128.75323 -0.0438,64.05984"
       id="path3148"
       inkscape:connector-curvature="0"
       sodipodi:nodetypes="cc" />
    <path
       sodipodi:nodetypes="cc"
       inkscape:connector-curvature="0"
       id="path3420"
       d="m 536.58232,243.69872 -0.0438,64.05984"
       style="fill:none;stroke:#000000;stroke-width:1.04549277000000007px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
    <path
       style="fill:none;stroke:#000000;stroke-width:1.04549277000000007px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m 372.06911,361.27117 -0.0438,64.05984"
       id="path3422"
       inkscape:connector-curvature="0"
       sodipodi:nodetypes="cc" />
    <path
       sodipodi:nodetypes="cc"
       inkscape:connector-curvature="0"
       id="path3424"
       d="m 199.43947,243.69872 -0.0438,64.05984"
       style="fill:none;stroke:#000000;stroke-width:1.04549277000000007px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
  </g>
</svg>
</center>


<p>In this case, $\vee$ is the binary OR operator and $\wedge$ is the binary AND operator.</p>

<p>These examples are interesting because they&rsquo;re all the same structure!  If we can prove a fact about the structure, we get information about all three systems.  These happen to be <a href="http://en.wikipedia.org/wiki/Boolean_algebra_%28structure%29">Boolean lattices</a>, which have the distributive property:</p>

<p>$$a \vee (b \wedge c) = (a \vee b) \wedge (a \vee c)$$
$$\forall a, b, c \in L$$</p>

<p>Now here&rsquo;s the neat part.  There are fundamentally only two lattices that aren&rsquo;t distributive:</p>

<center><svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   width="190.5546"
   height="157.38162"
   id="svg2"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="hasse-diamond.svg">
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1538"
     inkscape:window-height="1024"
     id="namedview3364"
     showgrid="false"
     inkscape:zoom="1.5536776"
     inkscape:cx="103.40865"
     inkscape:cy="65.667208"
     inkscape:window-x="469"
     inkscape:window-y="195"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg2"
     fit-margin-left="0"
     fit-margin-right="0"
     fit-margin-bottom="0"
     fit-margin-top="0" />
  <defs
     id="defs4" />
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <text
     sodipodi:linespacing="125%"
     style="font-size:23.82540512px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text2985"
     y="17.14238"
     x="88.56852"><tspan
       id="tspan2987"
       y="17.14238"
       x="88.56852"
       style="font-size:23.82540512px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">1</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:23.82540512px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text2989"
     y="87.172684"
     x="-0.72667485"><tspan
       id="tspan2991"
       y="87.172684"
       x="-0.72667485"
       style="font-size:23.82540512px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">a</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:23.82540512px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text2993"
     y="87.172653"
     x="88.364944"><tspan
       id="tspan2995"
       y="87.172653"
       x="88.364944"
       style="font-size:23.82540512px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">b</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:23.82540512px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text2997"
     y="87.172684"
     x="179.69022"><tspan
       id="tspan2999"
       y="87.172684"
       x="179.69022"
       style="font-size:23.82540512px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">c</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:23.82540512px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Lato;-inkscape-font-specification:Lato Medium"
     xml:space="preserve"
     id="text3005"
     y="157.20293"
     x="88.783752"><tspan
       id="tspan3007"
       y="157.20293"
       x="88.783752"
       style="font-size:23.82540512px;font-style:normal;font-variant:normal;font-weight:500;font-stretch:normal;text-align:start;line-height:125%;writing-mode:lr-tb;text-anchor:start;font-family:Lato;-inkscape-font-specification:Lato Medium">0</tspan></text>
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.46716708px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3037"
     d="M 11.294298,62.051285 85.451705,27.035625" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.46716708px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3039"
     d="M 181.42003,60.349475 C 156.70089,48.677585 131.98176,37.005695 107.26262,25.333805" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.46716708px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3046"
     d="M 85.451705,133.52749 11.294304,98.511835" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.46716708px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3048"
     d="M 107.26262,133.69767 181.42003,98.682005" />
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.62273222px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3148"
     d="m 96.370205,25.971325 -0.0261,38.15628" />
  <path
     d="m 96.370205,92.520035 -0.0261,38.156285"
     id="path3418"
     style="fill:none;stroke:#000000;stroke-width:0.62273222px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     inkscape:connector-curvature="0" />
</svg>

</center>


<center><em>The Diamond Lattice</em></center>


<p>$$a \vee (b \wedge c) \stackrel{?}{=} (a \vee b) \wedge (a \vee c)$$
$$a \vee 0 \stackrel{?}{=} 1 \wedge 1$$
$$a \neq 1$$
&hellip;and:</p>

<center><svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   width="180"
   height="152"
   id="svg2"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="hasse-pentagon.svg">
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1538"
     inkscape:window-height="1024"
     id="namedview3364"
     showgrid="false"
     inkscape:zoom="1.5536776"
     inkscape:cx="174.27202"
     inkscape:cy="109.08912"
     inkscape:window-x="999"
     inkscape:window-y="252"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg2"
     fit-margin-left="20"
     fit-margin-right="20"
     fit-margin-bottom="20"
     fit-margin-top="20" />
  <defs
     id="defs4" />
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata><g transform="scale(0.5)">
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text2989"
     y="129.70322"
     x="89.958122"><tspan
       id="tspan2991"
       y="129.70322"
       x="89.958122"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">c</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text2993"
     y="197.91043"
     x="88.180779"><tspan
       id="tspan2995"
       y="197.91043"
       x="88.180779"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">a</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text2997"
     y="163.78036"
     x="248.6824"><tspan
       id="tspan2999"
       y="163.78036"
       x="248.6824"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">b</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text2985"
     y="49.160156"
     x="168.0605"><tspan
       id="tspan2987"
       y="49.160156"
       x="168.0605"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">1</tspan></text>
  <text
     sodipodi:linespacing="125%"
     style="font-size:40px;font-style:normal;font-weight:500;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;-inkscape-font-specification:Lato Medium;font-family:Lato;font-stretch:normal;font-variant:normal;text-anchor:start;text-align:start;writing-mode:lr"
     xml:space="preserve"
     id="text3005"
     y="284.30505"
     x="168.42183"><tspan
       id="tspan3007"
       y="284.30505"
       x="168.42183"
       style="-inkscape-font-specification:Lato Medium;font-family:Lato;font-weight:500;font-style:normal;font-stretch:normal;font-variant:normal;font-size:40px;text-anchor:start;text-align:start;writing-mode:lr;line-height:125%">0</tspan></text>
  <path
     inkscape:connector-curvature="0"
     style="fill:none;stroke:#000000;stroke-width:0.52665037000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     id="path3039"
     d="M 254.66015,121.82853 C 236.03007,102.14694 217.4,82.46535 198.76993,62.783761" />
  <path
     d="M 254.66015,121.82853 C 236.03007,102.14694 217.4,82.465353 198.76993,62.783764"
     id="path3069"
     style="fill:none;stroke:#000000;stroke-width:0.52665037000000003px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m 251.01733,176.14463 -56.63981,64.36341"
     id="path3089"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 158.97764,61.577742 115.85415,98.908524"
     id="path3101"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m 99.763297,143.23435 0,19.30902"
     id="path3103"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m 115.21052,209.6136 52.13437,28.96354"
     id="path3105"
     inkscape:connector-curvature="0" /></g>
</svg>
</center>


<center><em>The Pentagon Lattice</em></center>


<p>$$a \vee (b \wedge c) \stackrel{?}{=} (a \vee b) \wedge (a \vee c)$$
$$a \vee 0 \stackrel{?}{=} 1 \wedge c$$
$$a \neq c$$</p>

<p>Any lattice that has a sub-lattice that is isomorphic to either the Diamond or Pentagon, referred to as $M_3$ and $N_5$ respectively, is not distributive.  It&rsquo;s not too hard to see, just verify that the corresponding elements that violate distribution above will fail no matter what else is going on in the lattice.</p>

<p>The surprising part is that <em>every</em> non-distributive lattice must contain either $M_3$ or $N_5$!  In a sense these are the two poisonous minimal shapes: their presence kills distributivity.</p>

<p>This alone seems like a cool little fact, but what struck me was that this isn&rsquo;t the first time that I&rsquo;ve seen something like this&hellip;</p>

<h2>Planar Graphs</h2>

<p>In Graph Theory, there&rsquo;s a property of graphs called planarity.  If you can draw the graph without any of the edges crossing, the graph is planar.  The Wikipedia page on <a href="http://en.wikipedia.org/wiki/Planar_graph">planar graphs</a> is filled with awesome facts.  For example, a planar graph can&rsquo;t have an average degree greater than 6 and any graph that can be drawn planarly with curvy edges can be drawn planarly with straight edges, but the most famous result concerning planar graphs is <a href="http://en.wikipedia.org/wiki/Kuratowski%27s_theorem">Kuratowski&rsquo;s Theorem</a>:</p>

<blockquote><p>A finite graph is planar if and only if it does not contain a subgraph that is a subdivision of $K_5$ (the complete graph on five vertices) or of $K_{3,3}$ (the complete bipartite graph on six vertices)</p></blockquote>

<center><svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   width="233"
   height="215"
   id="svg2"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="k5.svg">
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1570"
     inkscape:window-height="1168"
     id="namedview3364"
     showgrid="false"
     inkscape:zoom="1.098616"
     inkscape:cx="141.60391"
     inkscape:cy="311.75589"
     inkscape:window-x="469"
     inkscape:window-y="195"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg2" />
  <defs
     id="defs4" />
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata><g transform="scale(0.5)">
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 239.84724,59.518113 401.86927,179.66929"
     id="path3985"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 239.84724,59.518113 340.88345,370.81888 129.70867,368.08817"
     id="path3989"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 132.43937,368.99841 65.99213,178.75905 239.84724,63.159058"
     id="path3991"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 70.543311,177.84881 400.0488,181.48976"
     id="path3993"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 64.171658,182.4 338.15274,369.90864"
     id="path3995"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 131.52914,366.2677 401.86927,186.04094"
     id="path3997"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 131.52914,369.90864 237.11653,60.428349"
     id="path4001"
     inkscape:connector-curvature="0" />
  <path
     transform="matrix(2.8561552,0,0,2.8561552,439.26588,-296.82693)"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     sodipodi:ry="5.1490736"
     sodipodi:rx="5.1490736"
     sodipodi:cy="167.02873"
     sodipodi:cx="-130.0141"
     id="path3898"
     sodipodi:type="arc" />
  <path
     sodipodi:type="arc"
     id="path3900"
     sodipodi:cx="-130.0141"
     sodipodi:cy="167.02873"
     sodipodi:rx="5.1490736"
     sodipodi:ry="5.1490736"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     transform="matrix(2.8561552,0,0,2.8561552,501.46644,-108.13999)" />
  <path
     transform="matrix(2.8561552,0,0,2.8561552,711.57348,-108.13999)"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     sodipodi:ry="5.1490736"
     sodipodi:rx="5.1490736"
     sodipodi:cy="167.02873"
     sodipodi:cx="-130.0141"
     id="path3902"
     sodipodi:type="arc" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m 401.86927,181.48976 -55.5244,188.41888"
     id="path3999"
     inkscape:connector-curvature="0" />
  <path
     sodipodi:type="arc"
     id="path3128"
     sodipodi:cx="-130.0141"
     sodipodi:cy="167.02873"
     sodipodi:rx="5.1490736"
     sodipodi:ry="5.1490736"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     transform="matrix(2.8561552,0,0,2.8561552,613.0896,-416.3485)" />
  <path
     sodipodi:type="arc"
     id="path3904"
     sodipodi:cx="-130.0141"
     sodipodi:cy="167.02873"
     sodipodi:rx="5.1490736"
     sodipodi:ry="5.1490736"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     transform="matrix(2.8561552,0,0,2.8561552,770.24351,-296.82693)" /></g>
</svg>
</center>


<center>$K_5$<em>, the complete graph on five vertices</em></center>


<br/>


<center><svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   width="233"
   height="215"
   id="svg2"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="k33.svg">
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1570"
     inkscape:window-height="1168"
     id="namedview3364"
     showgrid="false"
     inkscape:zoom="2.197232"
     inkscape:cx="136.21704"
     inkscape:cy="131.89405"
     inkscape:window-x="469"
     inkscape:window-y="195"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg2" />
  <defs
     id="defs4" />
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g transform="scale(0.5)">
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m 130.16377,78.280315 203.8929,0"
     id="path4028"
     inkscape:connector-curvature="0" />
  <path
     inkscape:connector-curvature="0"
     id="path4030"
     d="m 130.16377,78.280315 203.8929,0"
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m 130.16377,351.17038 203.8929,0"
     id="path4032"
     inkscape:connector-curvature="0" />
  <path
     inkscape:connector-curvature="0"
     id="path4034"
     d="m 130.16377,214.81572 203.8929,0"
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 128.79842,75.549607 337.24249,214.81574"
     id="path4036"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 129.25353,78.735433 336.78738,350.44092"
     id="path4038"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 337.69761,76.004725 129.70865,214.81574 337.24249,351.35116"
     id="path4040"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 128.79842,350.89604 334.05667,214.81574"
     id="path4042"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 128.3433,353.17163 336.78738,77.370079"
     id="path4044"
     inkscape:connector-curvature="0" />
  <path
     transform="matrix(2.8561552,0,0,2.8561552,501.44289,-262.24426)"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     sodipodi:ry="5.1490736"
     sodipodi:rx="5.1490736"
     sodipodi:cy="167.02873"
     sodipodi:cx="-130.0141"
     id="path3898"
     sodipodi:type="arc" />
  <path
     sodipodi:type="arc"
     id="path3900"
     sodipodi:cx="-130.0141"
     sodipodi:cy="167.02873"
     sodipodi:rx="5.1490736"
     sodipodi:ry="5.1490736"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     transform="matrix(2.8561552,0,0,2.8561552,501.44289,-125.8896)" />
  <path
     sodipodi:type="arc"
     id="path3128"
     sodipodi:cx="-130.0141"
     sodipodi:cy="167.02873"
     sodipodi:rx="5.1490736"
     sodipodi:ry="5.1490736"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     transform="matrix(2.8561552,0,0,2.8561552,501.44289,-398.5989)" />
  <path
     sodipodi:type="arc"
     id="path4022"
     sodipodi:cx="-130.0141"
     sodipodi:cy="167.02873"
     sodipodi:rx="5.1490736"
     sodipodi:ry="5.1490736"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     transform="matrix(2.8561552,0,0,2.8561552,708.0665,-262.24426)" />
  <path
     transform="matrix(2.8561552,0,0,2.8561552,708.0665,-125.8896)"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     sodipodi:ry="5.1490736"
     sodipodi:rx="5.1490736"
     sodipodi:cy="167.02873"
     sodipodi:cx="-130.0141"
     id="path4024"
     sodipodi:type="arc" />
  <path
     transform="matrix(2.8561552,0,0,2.8561552,708.0665,-398.5989)"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     sodipodi:ry="5.1490736"
     sodipodi:rx="5.1490736"
     sodipodi:cy="167.02873"
     sodipodi:cx="-130.0141"
     id="path4026"
     sodipodi:type="arc" /></g>
</svg>
</center>


<center>$K_{3,3}$<em>, the complete bipartite graph on six vertices</em></center>


<br/>


<p>It turns out there are fundamentally only two graphs that aren&rsquo;t planar!  Any graph that &ldquo;contains&rdquo; either of these two graphs is not planar <em>and</em> any graph that isn&rsquo;t planar must &ldquo;contain&rdquo; one of them.  The meaning of &ldquo;contains&rdquo; is a little different here.  It&rsquo;s not enough to just find vertices that form $K_5$ or $K_{3,3}$ with the edges that connect them.  What we need to check is if any subgraph can be &ldquo;<a href="http://en.wikipedia.org/wiki/Homeomorphism_%28graph_theory%29#Subdivision_and_smoothing">smoothed</a>&rdquo; into one of these two graphs.</p>

<p>For example, this graph isn&rsquo;t planar because the red vertex can be smoothed away, leaving $K_{3,3}$:</p>

<center><svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   width="233"
   height="215"
   id="svg2"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="k33-smooth.svg">
  <sodipodi:namedview
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1570"
     inkscape:window-height="1168"
     id="namedview3364"
     showgrid="false"
     inkscape:zoom="2.197232"
     inkscape:cx="111.86822"
     inkscape:cy="222.91767"
     inkscape:window-x="744"
     inkscape:window-y="486"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg2" />
  <defs
     id="defs4" />
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata><g transform="scale(0.5)">
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m 130.16377,78.280315 203.8929,0"
     id="path4028"
     inkscape:connector-curvature="0" />
  <path
     inkscape:connector-curvature="0"
     id="path4030"
     d="m 130.16377,78.280315 203.8929,0"
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="m 130.16377,351.17038 203.8929,0"
     id="path4032"
     inkscape:connector-curvature="0" />
  <path
     inkscape:connector-curvature="0"
     id="path4034"
     d="m 130.16377,214.81572 203.8929,0"
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 128.79842,75.549607 337.24249,214.81574"
     id="path4036"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 129.25353,78.735433 336.78738,350.44092"
     id="path4038"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 337.69761,76.004725 129.70865,214.81574 337.24249,351.35116"
     id="path4040"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 128.79842,350.89604 334.05667,214.81574"
     id="path4042"
     inkscape:connector-curvature="0" />
  <path
     style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
     d="M 128.3433,353.17163 336.78738,77.370079"
     id="path4044"
     inkscape:connector-curvature="0" />
  <path
     transform="matrix(2.8561552,0,0,2.8561552,501.44289,-262.24426)"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     sodipodi:ry="5.1490736"
     sodipodi:rx="5.1490736"
     sodipodi:cy="167.02873"
     sodipodi:cx="-130.0141"
     id="path3898"
     sodipodi:type="arc" />
  <path
     sodipodi:type="arc"
     id="path3900"
     sodipodi:cx="-130.0141"
     sodipodi:cy="167.02873"
     sodipodi:rx="5.1490736"
     sodipodi:ry="5.1490736"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     transform="matrix(2.8561552,0,0,2.8561552,501.44289,-125.8896)" />
  <path
     sodipodi:type="arc"
     id="path3128"
     sodipodi:cx="-130.0141"
     sodipodi:cy="167.02873"
     sodipodi:rx="5.1490736"
     sodipodi:ry="5.1490736"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     transform="matrix(2.8561552,0,0,2.8561552,501.44289,-398.5989)" />
  <path
     sodipodi:type="arc"
     id="path4022"
     sodipodi:cx="-130.0141"
     sodipodi:cy="167.02873"
     sodipodi:rx="5.1490736"
     sodipodi:ry="5.1490736"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     transform="matrix(2.8561552,0,0,2.8561552,708.0665,-262.24426)" />
  <path
     transform="matrix(2.8561552,0,0,2.8561552,708.0665,-125.8896)"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     sodipodi:ry="5.1490736"
     sodipodi:rx="5.1490736"
     sodipodi:cy="167.02873"
     sodipodi:cx="-130.0141"
     id="path4024"
     sodipodi:type="arc" />
  <path
     transform="matrix(2.8561552,0,0,2.8561552,708.06647,-398.5989)"
     style="fill:#4682b4;fill-opacity:1;stroke:#000000;stroke-width:0.35012102;stroke-miterlimit:4;stroke-opacity:0.49803922;stroke-dasharray:none"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     sodipodi:ry="5.1490736"
     sodipodi:rx="5.1490736"
     sodipodi:cy="167.02873"
     sodipodi:cx="-130.0141"
     id="path4026"
     sodipodi:type="arc" />
  <path
     transform="matrix(2.8561552,0,0,2.8561552,604.75469,-398.5989)"
     style="fill:#cd5c5c;fill-opacity:1;stroke:#000000;stroke-width:0.35012102000000001;stroke-miterlimit:4;stroke-opacity:0.49803922000000000;stroke-dasharray:none"
     d="m -124.86503,167.02873 a 5.1490736,5.1490736 0 1 1 -10.29814,0 5.1490736,5.1490736 0 1 1 10.29814,0 z"
     sodipodi:ry="5.1490736"
     sodipodi:rx="5.1490736"
     sodipodi:cy="167.02873"
     sodipodi:cx="-130.0141"
     id="path4065"
     sodipodi:type="arc" /></g>
</svg>
</center>


<h2>And?</h2>

<p>Unfortunately, I&rsquo;m just learning about lattice theory and I have no idea if there&rsquo;s any formal connection between these similar concepts.  I have found that there is a branch of lattice theory that is concerned with the planarity of the Hasse diagrams, so it&rsquo;s not like any algebraist hasn&rsquo;t thought of this before.  If anyone has a formal connection or an example of other cases where a pair of structures have this kind of &ldquo;poisonous&rdquo; property, I&rsquo;d love to hear.</p>

<h2>Addendum</h2>

<p><a href="http://www.reddit.com/r/puremathematics/comments/2ul8ek/poisonous_shapes_in_algebra_and_graph_theory/co9ifo8">Nerkbot over at /r/puremathematics</a> was kind enough to share:</p>

<blockquote><p>You might be interested in the <a href="http://en.wikipedia.org/wiki/Robertson%E2%80%93Seymour_theorem">Robertson-Seymour theorem</a> which says that for any graph property that is closed under taking minors there is a finite list of &ldquo;forbidden minors&rdquo; or as you call them &ldquo;poisonous&rdquo; graphs. Kuratowski&rsquo;s theorem is one particular example of this.<br/><br/>
This relates also to the concept of <a href="http://en.wikipedia.org/wiki/Well-quasi-ordering">well-quasi-orders</a>. A quasi-ordered set $(X, \leq)$ is a well-quasi-order if every infinite sequence ($x_1, x_2, &hellip;$) with elements in $X$ has some $i &lt; j$ with $x_i \leq x_j$. An equivalent statement of the Robertson-Seymour theorem is that the set of all finite graphs ordered by the minor relation is well-quasi-ordered.<br/><br/>
Another example where &ldquo;forbidden minors&rdquo; appear is matroids. Matroids also have minors but unlike graphs they are not well-quasi-ordered under the minor relation. However certain minor closed properties do have a finite list of forbidden minors. For example <a href="http://en.wikipedia.org/wiki/Rota%27s_conjecture">Rota&rsquo;s conjecture</a>, which was announced to be proven very recently, says that for any finite field the set of matroids that are representable over that field are characterized by a finite list of forbidden minors.</em></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Silverman's Mode Estimation Method Explained]]></title>
    <link href="http://adereth.github.io/blog/2014/10/12/silvermans-mode-detection-method-explained/"/>
    <updated>2014-10-12T12:51:00-07:00</updated>
    <id>http://adereth.github.io/blog/2014/10/12/silvermans-mode-detection-method-explained</id>
    <content type="html"><![CDATA[<script src="http://d3js.org/d3.v2.js"></script>


<div>
  <style type="text/css">

     .chart {
       font-size: 10px;
       margin-top: -40px;
     }

     .point {
       fill: steelblue;
       fill-opacity: 0.5;
       stroke: black;
       stroke-width: 1
       stroke-opacity: 0.5;
     }

     .axis path, .axis line {
       fill: none;
       stroke: #000;
       shape-rendering: crispEdges;
     }

     .area {
       fill: steelblue;
       fill-opacity: 0.25;
       stroke: #000;
       stroke-opacity: 0.5;
     }

     .summedarea {
       fill: steelblue;
       fill-opacity: 0.75;
       stroke: #000;
       stroke-opacity: 0.5;
     }

    .bar rect {
        fill: steelblue;
        fill-opacity: 0.75;
        shape-rendering: crispEdges;
        stroke: #000;
        stroke-opacity: 0.5;

    }

    .bar text {
        fill: #fff;
    }


  </style>
</div>




<!-- Global Variables and Handlers: -->


<script type="text/javascript">

  var margin = {top: 50, right: 40, bottom: 40, left: 60},
      width = $('.entry-content').width();

  $(window).resize(function() {
    width = $('.entry-content').width();
  });

  function drawPoints(data, chart, height) {

    $(chart).empty();

    var x = d3.scale.linear()
        .domain([0, d3.max(data, function(d) { return d.value}) + 5])
        .range([0, width - margin.left - margin.right]);

    var y = d3.scale.ordinal()
        .domain(d3.range(data.length))
        .rangeRoundBands([height - margin.top - margin.bottom, 0], 0.2);

    var xAxis = d3.svg.axis()
        .scale(x)
        .orient('bottom')
        .tickPadding(8)
    .ticks(8);

    var yAxis = d3.svg.axis()
        .scale(y)
        .orient('left')
        .tickPadding(8)
        .tickSize(0);

    var svg = d3.select(chart).append('svg')
        .attr('width', width)
        .attr('height', height)
        .attr('class', 'chart')
          .append('g')
        .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');

    svg.selectAll('.chart')
        .data(data)
        .enter().append('circle')
        .attr('class', 'point')
        .attr('cx', function(d, i) { return x(d.value) })
        .attr('cy', 0)
        .attr('r', 3);

    svg.append('g')
        .attr('class', 'x axis')
        .call(xAxis);

  }

  function drawPointsWithResize(data, chart, height) {
    drawPoints(data, chart, height);
    $(window).resize(function() {drawPoints(data, chart, height); })
  };


     function drawOverlappingDistributions(data, chart, height) {

       $(chart).empty();

       var x = d3.scale.linear()
                       .domain([0, d3.max(data, function(d) { return d.value}) + 5])
                       .range([0, width - margin.left - margin.right]);

       var y = d3.scale.linear()
                       .domain([0, 0.5])
                       .range([height - margin.top - margin.bottom, 0]);

       var xAxis = d3.svg.axis()
                         .scale(x)
                         .orient('bottom')
                         .tickPadding(8)
                         .ticks(8);

       var yAxis = d3.svg.axis()
                         .scale(y)
                         .orient('left')
                         .tickPadding(8)
                         .tickSize(0);

       var svg = d3.select(chart).append('svg')
                   .attr('width', width)
                   .attr('height', height)
                   .attr('class', 'chart')
                   .append('g')
                   .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');

       var line = d3.svg.line()
                        .x(function(d) {return x(d.q)})
                        .y(function(d) {return y(d.p)})

       var scale = 1 / Math.sqrt(2 * Math.PI);
       function gaussian(x, mean, sigma) {
         var z = (x - mean) / sigma;
         return scale * Math.exp(-0.5 * z * z) / sigma;
       };

       function subpoints(d) {
         return d3.range(d.value - 4, d.value + 4, 0.1).map(
           function (d2,i,a) {
             return {value: d2, height: gaussian(d2, d.value, 1)};
           });
       }

       data.forEach(function(d) {

         var area = d3.svg.area()
                          .interpolate("monotone")
                          .x(function(d) { return x(d.value); })
                          .y0(y(0))
                          .y1(function(d) { return y(d.height); });

         svg.append('path')
            .attr('class', 'area')
            .attr("d", area(subpoints(d)))
       });

       svg.selectAll('.chart')
          .data(data)
          .enter().append('circle')
          .attr('class', 'point')
          .attr('cx', function(d, i) { return x(d.value) })
          .attr('cy', y(0))
          .attr('r', 3);

       svg.append('g')
          .attr('class', 'x axis')
          .attr("transform", "translate(0," + (height - margin.top - margin.bottom) + ")")
          .call(xAxis);

     }

     function drawOverlappingDistributionsWithResize(data, chart, height) {
       drawOverlappingDistributions(data, chart, height);
       $(window).resize(function() {drawOverlappingDistributions(data, chart, height); })
     };


     function drawSummedDistributions(data, chart, height, stddev) {

       $(chart).empty();

       var scale = 1 / Math.sqrt(2 * Math.PI);
       function gaussian(x, mean, sigma) {
         var z = (x - mean) / sigma;
         return scale * Math.exp(-0.5 * z * z) / sigma;
       };

       var points = d3.range(0, 30, 0.01).concat(data.map(function(x) {return x.value}))
       .sort(function(a,b){return a-b})
                      .map(
         function (x,i,a) {
           var y = 0;
           data.forEach(function(d) {
             y += gaussian(x, d.value, stddev)
           });
           return {value: x, height: y};
         }

       );



       var x = d3.scale.linear()
                       .domain([0, d3.max(data, function(d) { return d.value}) + 5])
                       .range([0, width - margin.left - margin.right]);

       var y = d3.scale.linear()
                       .domain([0, d3.max(points, function(d) { return d.height})])
                       .range([height - margin.top - margin.bottom, 0]);

       var xAxis = d3.svg.axis()
                         .scale(x)
                         .orient('bottom')
                         .tickPadding(8)
                         .ticks(8);

       var yAxis = d3.svg.axis()
                         .scale(y)
                         .orient('left')
                         .tickPadding(8)
                         .tickSize(0);

       var svg = d3.select(chart).append('svg')
                   .attr('width', width)
                   .attr('height', height)
                   .attr('class', 'chart')
                   .append('g')
                   .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');

       var line = d3.svg.line()
                        .x(function(d) {return x(d.q)})
                        .y(function(d) {return y(d.p)})

       var area = d3.svg.area()
                        .interpolate("monotone")
                        .x(function(d) { return x(d.value); })
                        .y0(y(0))
                        .y1(function(d) { return y(d.height); });

       svg.append('path')
          .attr('class', 'summedarea')
          .attr("d", area(points))

       svg.selectAll('.chart')
          .data(data)
          .enter().append('circle')
          .attr('class', 'point')
          .attr('cx', function(d, i) { return x(d.value) })
          .attr('cy', y(0))
          .attr('r', 3);


       svg.append('g')
          .attr('class', 'x axis')
          .attr("transform", "translate(0," + (height - margin.top - margin.bottom) + ")")
          .call(xAxis);

     }



     function drawSummedDistributionsWithResize(data, chart, height, stddev) {
       drawSummedDistributions(data, chart, height, stddev);
       $(window).resize(function() {drawSummedDistributions(data, chart, height, stddev); })
     };

     function drawHistogram(data, chart, height) {

       $(chart).empty();

       var x = d3.scale.linear()
                       .domain([0, 11])
                       .range([0, width - margin.left - margin.right]);

       var data = d3.layout.histogram()
                           .bins(x.ticks(10))(data);

       var y = d3.scale.linear()
                       .domain([0, d3.max(data, function(d) { return d.y; })])
                       .range([height - margin.top - margin.bottom, 0]);

       var xAxis = d3.svg.axis()
                         .scale(x)
                         .orient('bottom')
                         .tickPadding(8)
                         .ticks(8);

       var yAxis = d3.svg.axis()
                         .scale(y)
                         .orient('left')
                         .tickPadding(8)
                         .tickSize(0);

       var svg = d3.select(chart).append('svg')
                   .attr('width', width)
                   .attr('height', height)
                   .attr('class', 'chart')
                   .append('g')
                   .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');

       var bar = svg.selectAll(".bar")
                    .data(data)
                    .enter().append("g")
                    .attr("class", "bar")
                    .attr("transform", function(d) { return "translate(" + x(d.x - 0.5) + "," + y(d.y) + ")"; });

       bar.append("rect")
          .attr("width", x(data[0].dx) - 3)
          .attr("height", function(d) {
            console.log(d + " " + y(d.y));
            return height - y(d.y) - margin.bottom - margin.top; });

       svg.append("g")
          .attr("class", "x axis")
          .attr("transform", "translate(0," + (height - margin.top - margin.bottom) + ")")
          .call(xAxis);

       svg.append("g")
          .attr("class", "y axis")
          .call(yAxis);


     }

     function drawHistogramWithResize(data, chart, height) {
       drawHistogram(data, chart, height);
       $(window).resize(function() {drawHistogram(data, chart, height); })
     };


</script>


<p>I started digging into the history of mode detection after watching <a href="http://aysy.lu/">Aysylu Greenberg</a>&rsquo;s <a href="http://youtu.be/XmImGiVuJno">Strange Loop talk on benchmarking</a>.  She pointed out that the usual benchmarking statistics fail to capture that our timings may actually be samples from multiple distributions, commonly caused by the fact that our systems are comprised of hierarchical caches.</p>

<p>I thought it would be useful to add the detection of this to my favorite benchmarking tool, <a href="http://hugoduncan.org/">Hugo Duncan</a>&rsquo;s <a href="https://github.com/hugoduncan/criterium">Criterium</a>.  Not surprisingly, Hugo had already considered this and there&rsquo;s a note under the TODO section:</p>

<p><code>
Multimodal distribution detection.
Use kernel density estimators?
</code></p>

<p>I hadn&rsquo;t heard of using kernel density estimation for multimodal distribution detection so I found the original paper, <a href="http://www.stat.washington.edu/wxs/Stat593-s03/Literature/silverman-81a.pdf">Using Kernel Density Estimates to Investigate Multimodality (Silverman, 1981)</a>.  The original paper is a dense 3 pages and my goal with this post is to restate Silverman&rsquo;s method in a more accessible way.  Please excuse anything that seems overly obvious or pedantic and feel encouraged to suggest any modifications that would make it clearer.</p>

<h2>What is a mode?</h2>

<p>The mode of a distribution is the value that has the highest probability of being observed.  Many of us were first exposed to the concept of a mode in a discrete setting.  We have a bunch of observations and the mode is just the observation value that occurs most frequently.  It&rsquo;s an elementary exercise in counting.  Unfortunately, this method of counting doesn&rsquo;t transfer well to observations sampled from a continuous distribution because we don&rsquo;t expect to ever observe the exact some value twice.</p>

<p>What we&rsquo;re really doing when we count the observations in the discrete case is estimating the <a href="http://en.wikipedia.org/wiki/Probability_density_function">probability density function</a> (PDF) of the underlying distribution.  The value that has the highest probability of being observed is the one that is the global maximum of the PDF.  Looking at it this way, we can see that a necessary step for determining the mode in the continuous case is to first estimate the PDF of the underlying distribution.  We&rsquo;ll come back to how Silverman does this with a technique called kernel density estimation later.</p>

<h2>What does it mean to be multimodal?</h2>

<p>In the discrete case, we can see that there might be undeniable multiple modes because the counts for two elements might be the same.  For instance, if we observe:</p>

<p>$$1,2,2,2,3,4,4,4,5$$</p>

<p>Both 2 and 4 occur thrice, so we have no choice but to say they are both modes.  But perhaps we observe something like this:</p>

<p>$$1,1,1,2,2,2,2,3,3,3,4,9,10,10$$</p>

<p>The value 2 occurs more than anything else, so it&rsquo;s <em>the</em> mode.  But let&rsquo;s look at the histogram:</p>

<div id='hist'></div>


<script type='text/javascript'>
drawHistogramWithResize([1,1,1,2,2,2,2,3,3,3,4,9,10,10], '#hist', 300);
</script>


<p>That pair of 10&rsquo;s are out there looking awfully interesting.  If these were benchmark timings, we might suspect there&rsquo;s a significant fraction of calls that go down some different execution path or fall back to a slower level of the cache hierarchy.  Counting alone isn&rsquo;t going to reveal the 10&rsquo;s because there are even more 1&rsquo;s and 3&rsquo;s.  Since they&rsquo;re nestled up right next to the 2&rsquo;s, we probably will assume that they are just part of the expected variance in performance of the same path that caused all those 2&rsquo;s.  <em>What we&rsquo;re really interested in is the local maxima of the PDF because they are the ones that indicate that our underlying distribution may actually be a mixture of several distributions.</em></p>

<h2>Kernel density estimation</h2>

<p>Imagine that we make 20 observations and see that they are distributed like this:</p>

<div id='chart-1'></div>


<script type='text/javascript'>

  var data = [
{value: 13.1138}, {value: 10.6519}, {value: 20.5735}, {value: 7.89327}, {value: 9.02554}, {value: 20.8411}, {value: 8.84072}, {value: 10.6273}, {value: 13.5194}, {value: 17.9757}, {value: 10.1086}, {value: 8.68131}, {value: 7.16192}, {value: 19.9496}, {value: 8.77111}, {value: 19.5314}, {value: 9.40915}, {value: 12.8664}, {value: 23.1322}, {value: 13.5008}];
  drawPointsWithResize(data, '#chart-1', 90);
</script>


<p>We can estimate the underlying PDF by using what is called a <a href="http://en.wikipedia.org/wiki/Kernel_density_estimation">kernel density estimate</a>.  We replace each observation with some distribution, called the &ldquo;kernel,&rdquo; centered at the point.  Here&rsquo;s what it would look like using a normal distribution with standard deviation 1:</p>

<div id='chart-2'></div>


<script type='text/javascript'>
    drawOverlappingDistributionsWithResize(data, '#chart-2', 200);
</script>


<p>If we sum up all these overlapping distributions, we get a reasonable estimate for the underlying continuous PDF:</p>

<div id='chart-3'></div>


<script type='text/javascript'>
     drawSummedDistributionsWithResize(data, '#chart-3', 300, 1);
</script>


<p>Note that we made two interesting assumptions here:</p>

<ol>
<li><p>We replaced each point with a normal distribution.  Silverman&rsquo;s approach actually relies on some of the nice mathematical properties of the normal distribution, so that&rsquo;s what we use.</p></li>
<li><p>We used a standard deviation of 1.  Each normal distribution is wholly specified by a mean and a standard deviation.  The mean is the observation we are replacing, but we had to pick some arbitrary standard deviation which defined the width of the kernel.</p></li>
</ol>


<p>In the case of the normal distribution, we could just vary the standard deviation to adjust the width, but there is a more general way of stretching the kernel for arbitrary distributions.  The kernel density estimate for observations $X_1,X_2,&hellip;,X_n$ using a kernel function $K$ is:</p>

<p>$$\hat{f}(x)=\frac{1}{n}\sum\limits_{i=1}^n K(x-X_i)$$</p>

<p>In our case above, $K$ is the PDF for the normal distribution with standard deviation 1.  We can stretch the kernel by a factor of $h$ like this:</p>

<p>$$\hat{f}(x, h)=\frac{1}{nh}\sum\limits_{i=1}^n K(\frac{x-X_i}{h})$$</p>

<p>Note that changing $h$ has the exact same effect as changing the standard deviation: it makes the kernel wider and shorter while maintaining an area of 1 under the curve.</p>

<h2>Different kernel widths result in different mode counts</h2>

<p>The width of the kernel is effectively a smoothing factor.  If we choose too large of a width, we just end up with one giant mound that is almost a perfect normal distribution.  Here&rsquo;s what it looks like if we use $h=5$:</p>

<div id='chart-4'></div>


<script type='text/javascript'>
     drawSummedDistributionsWithResize(data, '#chart-4', 300, 5);
</script>


<p>Clearly, this has a single maxima.</p>

<p>If we choose too small of a width, we get a very spiky and over-fit estimate of the PDF.  Here&rsquo;s what it looks like with $h = 0.1$:</p>

<div id='chart-5'></div>


<script type='text/javascript'>
drawSummedDistributionsWithResize(data, '#chart-5', 300, 0.1);
</script>


<p>This PDF has a bunch of local maxima.  If we shrink the width small enough, we&rsquo;ll get $n$ maxima, where $n$ is the number of observations:</p>

<div id='chart-6'></div>


<script type='text/javascript'>
drawSummedDistributionsWithResize(data, '#chart-6', 300, 0.005);
</script>


<p>The neat thing about using the normal distribution as our kernel is that it has the property that shrinking the width will only introduce new local maxima.  Silverman gives a proof of this at the end of Section 2 in the original paper.  This means that for every integer $k$, where $1&lt;k&lt;n$, we can find the minimum width $h_k$ such that the kernel density estimate has at most $k$ maxima.  Silverman calls these $h_k$ values &ldquo;critical widths.&rdquo;</p>

<h2>Finding the critical widths</h2>

<p>To actually find the critical widths, we need to look at the formula for the kernel density estimate.  The PDF for a plain old normal distribution with mean $\mu$ and standard deviation $\sigma$ is:</p>

<p>$$f(x)=\frac{1}{\sigma\sqrt{2\pi}}\mathrm{e}^{&ndash;\frac{(x-\mu)^2}{2\sigma^2}}$$</p>

<p>The kernel density estimate with standard deviation $\sigma=1$ for observations $X_1,X_2,&hellip;,X_n$ and width $h$ is:</p>

<p>$$\hat{f}(x,h)=\frac{1}{nh}\sum\limits_{i=1}^n \frac{1}{\sqrt{2\pi}}\mathrm{e}^{&ndash;\frac{(x-X_i)^2}{2h^2}}$$</p>

<p>For a given $h$, you can find all the local maxima of $\hat{f}$ using your favorite numerical methods.  Now we need to find the $h_k$ where new local maxima are introduced.  Because of a result that Silverman proved at the end of section 2 in the paper, we know we can use a binary search over a range of $h$ values to find the critical widths at which new maxima show up.</p>

<h2>Picking which kernel width to use</h2>

<p>This is the part of the original paper that I found to be the least clear.  It&rsquo;s pretty dense and makes a number of vague references to the application of techniques from other papers.</p>

<p>We now have a kernel density estimate of the PDF for each number of modes between $1$ and $n$.  For each estimate, we&rsquo;re going to use a statistical test to determine the significance.  We want to be parsimonious in our claims that there are additional modes, so we pick the smallest $k$ such that the significance measure of $h_k$ meets some threshold.</p>

<p><a href="http://en.wikipedia.org/wiki/Bootstrapping_(statistics)">Bootstrapping</a> is used to evaluate the accuracy of a statistical measure by computing that statistic on observations that are <a href="http://en.wikipedia.org/wiki/Resampling_(statistics)">resampled</a> from the original set of observations.</p>

<p>Silverman used a <a href="http://en.wikipedia.org/wiki/Bootstrapping_(statistics)#Smooth_bootstrap">smoothed bootstrap procedure</a> to evaluate the significance.  Smoothed bootstrapping is bootstrapping with some noise added to the resampled observations.  First, we sample from the original set of observations, with replacement, to get $X_I(i)$.  Then we add noise to get our smoothed $y_i$ values:</p>

<p>$$y_i=\frac{1}{\sqrt{1+h_k^2/\sigma^2}}(X_{I(i)}+h_k \epsilon_i)$$</p>

<p>Where $\sigma$ is the standard deviation of $X_1,X_2,&hellip;,X_n$, $h_k$ is the critical width we are testing, and $\epsilon_i$ is a random value sampled from a normal distribution with mean 0 and standard deviation 1.</p>

<p>Once we have these smoothed values, we compute the kernel density estimate of them using $h_k$ and count the modes.  If this kernel density estimate doesn&rsquo;t have more than $k$ modes, we take that as a sign that we have a good critical width.  We repeat this many times and use the fraction of simulations where we didn&rsquo;t find more than $k$ modes as the p-value.  In the paper, Silverman does 100 rounds of simulation.</p>

<h2>Conclusion</h2>

<p>Silverman&rsquo;s technique was a really important early step in multimodality detection and it has been thoroughly investigated and improved upon since 1981.  Google Scholar lists <a href="http://scholar.google.com/scholar?espv=2&amp;bav=on.2,or.r_cp.r_qf.&amp;bvm=bv.77161500,d.cGE&amp;ion=1&amp;biw=1680&amp;bih=938&amp;dpr=2&amp;um=1&amp;ie=UTF-8&amp;lr=&amp;cites=18163244822709704741">about 670 citations of this paper</a>.  If you&rsquo;re interested in learning more, one paper I found particularly helpful was <a href="http://www3.stat.sinica.edu.tw/statistica/oldpdf/A11n28.pdf">On the Calibration of Silverman&rsquo;s Test for Multimodality (Hall &amp; York, 2001)</a>.</p>

<p>One of the biggest weaknesses in Silverman&rsquo;s technique is that the critical width is a global parameter, so it may run into trouble if our underlying distribution is a mixture of low and high variance component distributions.  For an actual implementation of mode detection in a benchmarking package, I&rsquo;d consider using something that doesn&rsquo;t have this issue, like the technique described in <a href="http://private.igf.edu.pl/~jnn/Literatura_tematu/Minnotte_1997.pdf">Nonparametric Testing of the Existence of Modes (Minnotte, 1997)</a>.</p>

<p>I hope this is correct and helpful.  If I misinterpreted anything in the original paper, please let me know.  Thanks!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Computing the Remedian in Clojure]]></title>
    <link href="http://adereth.github.io/blog/2014/09/29/computing-the-remedian-in-clojure/"/>
    <updated>2014-09-29T09:03:00-07:00</updated>
    <id>http://adereth.github.io/blog/2014/09/29/computing-the-remedian-in-clojure</id>
    <content type="html"><![CDATA[<p>The remedian is an approximation of the <a href="http://en.wikipedia.org/wiki/Median">median</a> that can be computed using only $O(\log{n})$ storage.  The algorithm was originally presented in <a href="http://web.ipac.caltech.edu/staff/fmasci/home/statistics_refs/Remedian.pdf">The Remedian: A Robust Averaging Method for Large Data Sets by Rousseeuw and Bassett</a> (1990).  The core of it is on the first page:</p>

<blockquote><p>Let us assume that $n = b^k$, where $b$ and $k$ are integers (the case where $n$ is not of this form will be treated in Sec. 7.  The <em>remedian</em> with base $b$ proceeds by computing medians of groups of $b$ observations, yielding $b^{k-1}$ estimates on which this procedure is iterated, and so on, until only a single estimate remains.  When implemented properly, this method merely needs $k$ arrays of size $b$ that are continuously reused.</p></blockquote>

<p>The implementation of this part in Clojure is so nice that I just had to share.</p>

<p>First, we need a vanilla implementation of the median function.  We&rsquo;re always going to be computing the median of sets of size $b$, where $b$ is relatively small, so there&rsquo;s no need to get fancy with a linear time algorithm.</p>

<p>```clojure
(defn median [coll]
  (let [size (count coll)</p>

<pre><code>    sorted (sort coll)]
(if (odd? size)
  (nth sorted (int (/ size 2)))
  (/ (+ (nth sorted (int (/ size 2)))
        (nth sorted (dec (int (/ size 2)))))
     2))))
</code></pre>

<p>```</p>

<p>Now we can implement the actual algorithm.  We group, compute the median of each group, and recur, with the base case being when we&rsquo;re left with a single element in the collection:</p>

<p>```clojure
(defn remedian [b coll]
  (if (next coll)</p>

<pre><code>(-&gt;&gt; coll
     (partition-all b)
     (map median)
     (recur b))
(first coll)))
</code></pre>

<p>```</p>

<p>Because <code>partition-all</code> and <code>map</code> both operate on and return lazy sequences, we maintain the property of only using $O(b \log_{b}{n})$ memory at any point in time.</p>

<p>While this implementation is simple and elegant, it only works if the size of the collection is a power of $b$.  If we don&rsquo;t have $n = b^k$ where $b$ and $k$ are integers, we&rsquo;ll over-weight the observations that get grouped into the last groups of size $&lt; b$.</p>

<p>Section 7 of the original paper describes the weighting scheme you should use to compute the median if you&rsquo;re left with incomplete groupings:</p>

<blockquote><p>How should we proceed when the sample size $n$ is less than $b^k$? The remedian algorithm then ends up with $n_1$ numbers in the first array, $n_2$ numbers in the second array, and $n_k$ numbers in the last array, such that $n = n_1 + n_{2}b + &hellip; + n_k b^{k-1}$.  For our final estimate we then compute a weighted median in which the $n_1$, numbers in the first array have weight 1, the $n_2$ numbers in the second array have weight $b$, and the $n_k$ numbers in the last array have weight $b^{k-1}$. This final computation does not need much storage because there are fewer than $bk$ numbers and they only have to be ranked in increasing order, after which their weights must be added until the sum is at least $n/2$.</p></blockquote>

<p>It&rsquo;s a bit difficult to directly translate this to the recursive solution I gave above because in the final step we&rsquo;re going to do a computation on a mixture of values from the different recursive sequences.  Let&rsquo;s give it a shot.</p>

<p>We need some way of bubbling up the incomplete groups for the final weighted median computation.  Instead of having each recursive sequence <em>always</em> compute the median of each group, we can add a check to see if the group is smaller than $b$ and, if so, just return the incomplete group:</p>

<p>```clojure
(defn remedian-with-leftovers [b coll]
  (let [incomplete-group? #(or (&lt; (count %) b)</p>

<pre><code>                           (seq? (last %)))]
(loop [coll coll]
  (if (next coll)
    (-&gt;&gt; coll
         (partition-all b)
         (map #(if (incomplete-group? %) % (median %)))
         (recur))
    coll))))
</code></pre>

<p>```</p>

<p>For example, if we were using the mutable array implementation proposed in the original paper to compute the remedian of <code>(range 26)</code> with $b = 3$, the final state of the arrays would be:</p>

<table>
<thead>
<tr>
<th>Array  </th>
<th> $i_0$ </th>
<th> $i_1$   </th>
<th> $i_2$</th>
</tr>
</thead>
<tbody>
<tr>
<td>0      </td>
<td> 24 </td>
<td> 25 </td>
<td> <em>empty</em></td>
</tr>
<tr>
<td>1      </td>
<td> 19 </td>
<td> 22 </td>
<td> <em>empty</em></td>
</tr>
<tr>
<td>2      </td>
<td> 4  </td>
<td> 13 </td>
<td> <em>empty</em></td>
</tr>
</tbody>
</table>


<br/>


<p>In our sequence based solution, the final sequence will be <code>((4 13 (19 22 (24 25))))</code>.</p>

<p>Now, we need to convert these nested sequences into <code>[value weight]</code> pairs that could be fed into a weighted median function:</p>

<p>```clojure
(defn weight-leftovers [b nested-elements]
  (loop [vw-pairs []</p>

<pre><code>     nested-elements nested-elements
     weight 1]
(let [element (first nested-elements)]
  (cond
   (next nested-elements) (recur (conj vw-pairs [element weight])
                                 (next nested-elements)
                                 weight)
   (seq? element) (recur vw-pairs
                         element
                         (/ weight b))
   :else (conj vw-pairs [element weight])))))
</code></pre>

<p>```
Instead of weighting the values in array $j$ with weight $b^{j-1}$, we&rsquo;re weighting it at $\frac{b^{j-1}}{b^{k}}$.  Dividing all the weights by a constant will give us the same result and this is slightly easier to compute recursively, as we can just start at 1 and divide by $b$ as we descend into each nested sequence.</p>

<p>If we run this on the <code>(range 26)</code> with $b = 3$, we get:</p>

<p>```clojure
user> (&ndash;>> (range 26)</p>

<pre><code>       (remedian-with-leftovers 3)
       (weight-leftovers 3))
</code></pre>

<p>[[4 1/3] [13 1/3] [19 1/9] [22 1/9] [24 1/27] [25 1/27]]
```</p>

<p>Finally, we&rsquo;re going to need a weighted median function.  This operates on a collection of <code>[value weight]</code> pairs:</p>

<p>```clojure
(defn weighted-median [vw-pairs]
  (let [total-weight (&ndash;>> vw-pairs</p>

<pre><code>                      (map second)
                      (reduce +))
    middle-weight (/ total-weight 2)
    sorted-pairs (sort-by first vw-pairs)
    sorted-pairs-cum-weight (reductions (fn [[_ cum-weight] [v w]]
                                          [v (+ cum-weight w)])
                                        sorted-pairs)]
(-&gt;&gt; sorted-pairs-cum-weight
     (filter #(&lt;= middle-weight (second %)))
     (ffirst))))
</code></pre>

<p>```</p>

<p>We can put it all together and redefine the remedian function to deal with the case where $n$ isn&rsquo;t a power of $b$:</p>

<p>```clojure
(defn remedian [b coll]
  (&ndash;>> coll</p>

<pre><code>   (remedian-with-leftovers b)
   (weight-leftovers b)
   (weighted-median)))
</code></pre>

<p>```</p>

<p>The remedian is fun, but in practice I prefer to use the approximate quantile methods that were invented a few years later and presented in <a href="http://www.cs.umd.edu/~samir/498/manku.pdf">Approximate Medians and other Quantiles in One Pass and with Limited Memory by Manku, Rajagopalan, and Lindsay</a> (1998).  There&rsquo;s a high-quality implementation you can use in Clojure via Java interop in Parallel Colt&rsquo;s <a href="http://incanter.org/docs/parallelcolt/api/cern/jet/stat/tdouble/quantile/DoubleQuantileFinderFactory.html">DoubleQuantileFinderFactory</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Typing Qwerty on a Dvorak Keyboard]]></title>
    <link href="http://adereth.github.io/blog/2014/08/14/typing-qwerty-on-a-dvorak-keyboard/"/>
    <updated>2014-08-14T18:40:00-07:00</updated>
    <id>http://adereth.github.io/blog/2014/08/14/typing-qwerty-on-a-dvorak-keyboard</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/thattommyhall">@thattommyhall</a> posted a fun question on Twitter:</p>

<blockquote class="twitter-tweet" data-partner="tweetdeck"><p>If you type your name on a keyboard marked as qwerty but set to Dvorak and keep reinputting what comes out, will it ever say your name?</p>&mdash; !!!!!11111oneoneone (@thattommyhall) <a href="https://twitter.com/thattommyhall/statuses/494916131598393344">July 31, 2014</a></blockquote>


<script async src="http://adereth.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>The best answer was &ldquo;yes because group theory&rdquo; and <a href="https://twitter.com/AnnaPawlicka">@AnnaPawlicka</a> demonstrated it was true for her name:</p>

<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/thattommyhall">@thattommyhall</a> Yes. I can confirm that. :) <a href="http://t.co/Vubkf1ltoK">pic.twitter.com/Vubkf1ltoK</a></p>&mdash; Anna Pawlicka (@AnnaPawlicka) <a href="https://twitter.com/AnnaPawlicka/statuses/494918999747350529">July 31, 2014</a></blockquote>


<script async src="http://adereth.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>But is it really true?  And if so, how many iterations will it take to get the target string?  I turned to Mathematica&hellip;</p>

<p><code>clojure
qwerty =
  {"-", "=",
   "q", "w", "e", "r", "t", "y", "u", "i", "o", "p", "[", "]", "\\",
   "a", "s", "d", "f", "g", "h", "j", "k", "l", ";", "'",
   "z", "x", "c", "v", "b", "n", "m", ",", ".", "/"};
dvorak =
  {"[", "]",
   "'", ",", ".", "p", "y", "f", "g", "c", "r", "l", "/", "=", "\\",
   "a", "o", "e", "u", "i", "d", "h", "t", "n", "s", "-",
   ";", "q", "j", "k", "x", "b", "m", "w", "v", "z"};
</code></p>

<p><code>clojure
KeyGraph[from_, to_] :=
 Graph[
  MapThread[#1 -&gt; #2 &amp;, {from, to}],
  VertexLabels -&gt; "Name", DirectedEdges -&gt; True]
</code></p>

<p>This allows us to visualize the mapping of keys from one layout to another:</p>

<p><code>clojure
KeyGraph[dvorak, qwerty]
</code>
<img src="/images/dvorak-qwerty.png" alt="Dvorak to Qwerty Graph" /></p>

<p>There is a single directed edge going from each character to the one that will be displayed when you type it.  There are 3 keys that remain unchanged, 2 pairs of swapped keys, and 2 large cycles of keys.</p>

<p>We can get these groups programmatically using the <a href="http://reference.wolfram.com/mathematica/ref/ConnectedComponents.html">ConnectedComponents function</a>:</p>

<p><code>clojure
TableForm @
 Sort @
  ConnectedComponents @
   KeyGraph[dvorak, qwerty]
</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Output </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>\
</span><span class='line'>a
</span><span class='line'>m
</span><span class='line'>] =
</span><span class='line'>, w
</span><span class='line'>. e y t f g u c i d h j k v
</span><span class='line'>[ &amp;ndash; &amp;lsquo; q p r o l / s n ; z x b
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>It will take the length of the cycle the letter is in to get the letter we want.  For a given word, we won&rsquo;t get all the letters we want unless we&rsquo;ve iterated some multiple of the length of the cycles each letter is in.  Let&rsquo;s apply the Least Common Multiple function to see the worst case where there is a letter from each cycle:</p>

<p><code>clojure
LCM @@
 Length /@
  ConnectedComponents @
   KeyGraph[dvorak, qwerty]
</code>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Output </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>210
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Looks like Anna got lucky that her name only consists of letters in a cycle of length 1 and 15.</p>

<p>For fun, here&rsquo;s the graph we get if we use Colemak instead of Dvorak:</p>

<p>```clojure
colemak =
  {&ldquo;&ndash;&rdquo;, &ldquo;=&rdquo;,
   &ldquo;q&rdquo;, &ldquo;w&rdquo;, &ldquo;f&rdquo;, &ldquo;p&rdquo;, &ldquo;g&rdquo;, &ldquo;j&rdquo;, &ldquo;l&rdquo;, &ldquo;u&rdquo;, &ldquo;y&rdquo;, &ldquo;;&rdquo;, &ldquo;[&rdquo;, &ldquo;]&rdquo;, &ldquo;\&rdquo;,
   &ldquo;a&rdquo;, &ldquo;r&rdquo;, &ldquo;s&rdquo;, &ldquo;t&rdquo;, &ldquo;d&rdquo;, &ldquo;h&rdquo;, &ldquo;n&rdquo;, &ldquo;e&rdquo;, &ldquo;i&rdquo;, &ldquo;o&rdquo;, &ldquo;&lsquo;&rdquo;,
   &ldquo;z&rdquo;, &ldquo;x&rdquo;, &ldquo;c&rdquo;, &ldquo;v&rdquo;, &ldquo;b&rdquo;, &ldquo;k&rdquo;, &ldquo;m&rdquo;, &ldquo;,&rdquo;, &ldquo;.&rdquo;, &ldquo;/&rdquo;};</p>

<p>KeyGraph[colemak, qwerty]
```
<img src="/images/colemak-qwerty.png" alt="Colemak to Qwerty Graph" /></p>

<p>One cycle of length 14, one cycle of length 3, and the rest are just letters that map back to themselves.</p>

<p><code>clojure
LCM @@
 Length /@
  ConnectedComponents @
   KeyGraph[colemak, qwerty]
</code>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Output </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>42
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
